name: Build CLI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            args: ''
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        
      - name: Setup target
        run: rustup target add ${{ matrix.config.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.config.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rusty-buddy-${{ matrix.config.target }}${{ matrix.config.os == 'windows-latest' && '.exe' || '' }}
          path: target/release/rusty-buddy${{ matrix.config.os == 'windows-latest' && '.exe' || '' }}

      - name: Upload artifact to GitHub Release
        uses: actions/upload-release-asset@v1
        if: github.event_name == 'release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: target/release/rusty-buddy${{ matrix.config.os == 'windows-latest' && '.exe' || '' }}
          asset_name: rusty-buddy-${{ matrix.config.target }}${{ matrix.config.os == 'windows-latest' && '.exe' || '' }}
          asset_content_type: application/octet-stream
